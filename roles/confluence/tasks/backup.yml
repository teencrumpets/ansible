- name: Mounting backup share
  mount:
    src: "{{ backup_share }}"
    path: '{{ backup_mount_dir_confluence }}'
    state: mounted
    fstype: nfs
  changed_when: false

- name: Confluence volume backup directory
  file:
    state: directory
    path: "{{ confluence_backup_dir }}"
    owner: ypgansible
    group: docker
    mode: 0770

- name: Postgres volume backup directory
  file:
    state: directory
    path: "{{ postgres_backup_dir }}"
    owner: ypgansible
    group: docker
    mode: 0770

- name: Stopping Confluence service
  command:
    cmd: 'docker compose down'
    chdir: "{{compose_path}}"
  changed_when: false

- name: Backing up confluence volume
  command:
    cmd: "tar cvpf {{ confluence_backup_dir }}/{{ lookup('pipe', 'date +%Y_%h_%d-%H-%M') }}_config.tar ."
    chdir: /var/lib/docker/volumes/confluence-home
  changed_when: false

- name: Backing up postgres volume to incremental
  command:
    cmd: "tar cvpf {{ postgres_backup_dir }}/{{ lookup('pipe', 'date +%Y_%h_%d-%H-%M') }}_config.tar ."
    chdir: "/var/lib/docker/volumes/{{confluence_db_volume}}"
  changed_when: false

- name: Get volume backup list confluence
  find:
    paths: "{{ confluence_backup_dir }}"
    file_type: file
  register: backups
  failed_when: not backups.files

- name: Setting values
  set_fact:
    oldest: "{{ backups.files | sort(attribute='mtime') | first }}"
    file_count: "{{ backups.files | length }}"

- name: Volume backups count confluence
  debug:
    msg: "The number of volume backups is {{ file_count }}"

- name: Volume backups list confluence
  debug:
    msg: "{{ backups.files }}"

- name: Removing oldest backup confluence
  file:
    path: "{{ oldest.path }}"
    state: absent
  changed_when: false
  when: file_count | int > volume_backups

- name: Get volume backup list postgres
  find:
    paths: "{{ postgres_backup_dir }}"
    file_type: file
  register: backups
  failed_when: not backups.files

- name: Setting values
  set_fact:
    oldest: "{{ backups.files | sort(attribute='mtime') | first }}"
    file_count: "{{ backups.files | length }}"

- name: Volume backups count postgres
  debug:
    msg: "The number of volume backups is {{ file_count }}"

- name: Volume backups list
  debug:
    msg: "{{ backups.files }}"

- name: Removing oldest backup postgres
  file:
    path: "{{ oldest.path }}"
    state: absent
  changed_when: false
  when: file_count | int > volume_backups